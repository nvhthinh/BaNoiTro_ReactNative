{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProduct_HoanThinh\\\\BaNoiTro_ReactNative\\\\src\\\\screens\\\\Register\\\\RegisterScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../../components/Background\";\nimport Logo from \"../../components/Logo\";\nimport Header from \"../../components/Header\";\nimport Button from \"../../components/Button\";\nimport TextInput from \"../../components/TextInput\";\nimport BackButton from \"../../components/BackButton\";\nimport { theme } from \"../../core/theme\";\nimport { emailValidator } from \"../../helpers/emailValidator\";\nimport { passwordValidator } from \"../../helpers/passwordValidator\";\nimport { nameValidator } from \"../../helpers/nameValidator\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messageErrorSignUp = _useState8[0],\n      setMessageErrorSignUp = _useState8[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    signUp();\n  };\n\n  var signUp = function signUp() {\n    return _regeneratorRuntime.async(function signUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.1.8:3000/api/signUp', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                'name': name.value,\n                'email': email.value,\n                'pass': password.value\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (res) {\n              if (res.status === 1) {\n                AsyncStorage.setItem('emailLogin', email.value);\n                navigation.navigate('LoginScreen');\n                setName(_objectSpread(_objectSpread({}, name), {}, {\n                  value: ''\n                }));\n                setEmail(_objectSpread(_objectSpread({}, email), {}, {\n                  value: ''\n                }));\n                setPassword(_objectSpread(_objectSpread({}, password), {}, {\n                  value: ''\n                }));\n              }\n\n              if (res.status === 2) {\n                setEmail(_objectSpread(_objectSpread({}, email), {}, {\n                  error: \"Email này đã được sử dụng. Vui lòng dùng Email khác!\"\n                }));\n              } else {\n                setMessageErrorSignUp(1);\n              }\n            }).done());\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Regist client fail \", _context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack(_) {\n      return navigation.navigate(\"StartScreen\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Create Account\"), React.createElement(TextInput, {\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      setName({\n        value: text,\n        error: ''\n      });\n      setMessageErrorSignUp(0);\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      setEmail({\n        value: text,\n        error: ''\n      });\n      setMessageErrorSignUp(0);\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      setPassword({\n        value: text,\n        error: ''\n      });\n      setMessageErrorSignUp(0);\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: \"red\",\n      paddingBottom: 20,\n      paddingTop: 5,\n      display: messageErrorSignUp != 1 ? \"none\" : \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"C\\xF3 l\\u1ED7i x\\u1EA3y ra. Vui l\\xF2ng \\u0111\\u0103ng k\\xED l\\u1EA1i!\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onSignUpPressed,\n    style: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["D:/WebProduct_HoanThinh/BaNoiTro_ReactNative/src/screens/Register/RegisterScreen.js"],"names":["React","useEffect","useState","AsyncStorage","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","RegisterScreen","navigation","value","error","name","setName","email","setEmail","password","setPassword","messageErrorSignUp","setMessageErrorSignUp","onSignUpPressed","nameError","emailError","passwordError","signUp","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","status","setItem","navigate","done","console","log","_","text","color","paddingBottom","paddingTop","display","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","colors","primary"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { View, StyleSheet, TouchableOpacity, Alert, ActivityIndicator, AsyncStorage } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../../components/Background'\r\nimport Logo from '../../components/Logo'\r\nimport Header from '../../components/Header'\r\nimport Button from '../../components/Button'\r\nimport TextInput from '../../components/TextInput'\r\nimport BackButton from '../../components/BackButton'\r\nimport { theme } from '../../core/theme'\r\nimport { emailValidator } from '../../helpers/emailValidator'\r\nimport { passwordValidator } from '../../helpers/passwordValidator'\r\nimport { nameValidator } from '../../helpers/nameValidator'\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [name, setName] = useState({ value: '', error: '' })\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n  const [messageErrorSignUp, setMessageErrorSignUp] = useState(0)\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const onSignUpPressed = () => {\r\n    const nameError = nameValidator(name.value)\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    if (emailError || passwordError || nameError) {\r\n      setName({ ...name, error: nameError })\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n    signUp();\r\n  }\r\n\r\n  const signUp = async() => {\r\n    try {\r\n      // IP address my computer\r\n      await fetch('http://192.168.1.8:3000/api/signUp',{\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'name': name.value,\r\n          'email': email.value,\r\n          'pass': password.value\r\n        })\r\n      }).then((response)=>response.json())\r\n      .then((res)=>{\r\n        if(res.status===1){\r\n          AsyncStorage.setItem('emailLogin',email.value);\r\n          navigation.navigate('LoginScreen');\r\n          // console.log (\"regist success\", email.value)\r\n          setName({ ...name, value: '' })\r\n          setEmail({ ...email, value: ''  })\r\n          setPassword({ ...password, value: ''  })\r\n        }\r\n        if(res.status===2){\r\n          setEmail({ ...email, error: \"Email này đã được sử dụng. Vui lòng dùng Email khác!\" })\r\n          // console.log (\"Acc ton tai\", res)\r\n        }\r\n        else{\r\n          setMessageErrorSignUp(1)\r\n          // console.log (\"log info \", res)\r\n          // Alert.alert(\"Invalid Credentials\");\r\n        }\r\n      })\r\n      .done();\r\n\r\n    } catch (error) {\r\n      console.log(\"Regist client fail \", error);\r\n    }\r\n    \r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setIsLoading(false);\r\n  //   }, 1000000000000);\r\n  // }, []);\r\n\r\n  // if( isLoading ) {\r\n  //   return (\r\n  //     <View style={{flex: 1,justifyContent: \"center\" }}>\r\n  //       <ActivityIndicator size=\"large\" color=\"#e7b62c\"/>\r\n  //     </View>\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={_ => navigation.navigate(\"StartScreen\")} />\r\n      <Logo />\r\n      <Header>Create Account</Header>\r\n      <TextInput\r\n        label=\"Name\"\r\n        returnKeyType=\"next\"\r\n        value={name.value}\r\n        onChangeText={(text) => { setName({ value: text, error: '' }); setMessageErrorSignUp(0); } }\r\n        error={!!name.error}\r\n        errorText={name.error}\r\n      />\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => { setEmail({ value: text, error: '' }); setMessageErrorSignUp(0); } }\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => { setPassword({ value: text, error: '' }); setMessageErrorSignUp(0); } }\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <Text style={{color: \"red\", paddingBottom: 20, paddingTop: 5, display: messageErrorSignUp!=1?\"none\":\"flex\" }}>Có lỗi xảy ra. Vui lòng đăng kí lại!</Text>\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={onSignUpPressed}\r\n        style={{ marginTop: 24 }}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\r\n          <Text style={styles.link}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}