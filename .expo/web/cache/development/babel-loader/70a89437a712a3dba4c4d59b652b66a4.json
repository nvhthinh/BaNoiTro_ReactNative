{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProduct_HoanThinh\\\\BaNoiTro_ReactNative\\\\src\\\\screens\\\\Login\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../../components/Background\";\nimport Logo from \"../../components/Logo\";\nimport Header from \"../../components/Header\";\nimport Button from \"../../components/Button\";\nimport TextInput from \"../../components/TextInput\";\nimport BackButton from \"../../components/BackButton\";\nimport authentication from \"../../routes/Authentication\";\nimport { theme } from \"../../core/theme\";\nimport { emailValidator } from \"../../helpers/emailValidator\";\nimport { passwordValidator } from \"../../helpers/passwordValidator\";\nimport AppContainer from \"./../../navigations/AppNavigation\";\nimport { State } from 'react-native-gesture-handler';\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageErrorLogin = _useState6[0],\n      setMessageErrorLogin = _useState6[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    signin();\n  };\n\n  var signin = function signin() {\n    return _regeneratorRuntime.async(function signin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.1.8:3000/api/login', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                'email': email.value,\n                'pass': password.value\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (res) {\n              if (res.status === 1) {\n                console.log(\"res \", res);\n                var _res$body = res.body,\n                    id = _res$body.id,\n                    email = _res$body.email,\n                    role = _res$body.role,\n                    dpname = _res$body.dpname,\n                    image = _res$body.image;\n                authentication.saveItem('emailLG', email);\n                authentication.saveItem('idLG', id + \"\");\n                authentication.saveItem('roleLG', role + \"\");\n                authentication.saveItem('dpnameLG', dpname);\n                authentication.saveItem('imageLG', image);\n                navigation.navigate('Home');\n              } else {\n                setMessageErrorLogin(1);\n                console.log(\"log info no login  \", res);\n              }\n            }).done());\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Login client fail \", _context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  _retrieveData = function _retrieveData() {\n    var value;\n    return _regeneratorRuntime.async(function _retrieveData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('emailLogin'));\n\n          case 3:\n            value = _context2.sent;\n\n            if (value !== null) {\n              console.log(value);\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack(_) {\n      return navigation.navigate(\"StartScreen\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Welcome back\", State.email), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      setEmail({\n        value: text,\n        error: ''\n      });\n      setMessageErrorLogin(0);\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      setPassword({\n        value: text,\n        error: ''\n      });\n      setMessageErrorLogin(0);\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\",\n      paddingBottom: 20,\n      paddingTop: 5,\n      display: messageErrorLogin != 1 ? \"none\" : \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Email kh\\xF4ng t\\u1ED3n t\\u1EA1i ho\\u1EB7c m\\u1EADt kh\\u1EA9u ch\\u01B0a \\u0111\\xFAng. Vui l\\xF2ng nh\\u1EADp l\\u1EA1i!\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('RegisterScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["D:/WebProduct_HoanThinh/BaNoiTro_ReactNative/src/screens/Login/LoginScreen.js"],"names":["React","useState","AsyncStorage","Text","Background","Logo","Header","Button","TextInput","BackButton","authentication","theme","emailValidator","passwordValidator","AppContainer","State","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","messageErrorLogin","setMessageErrorLogin","onLoginPressed","emailError","passwordError","signin","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","status","console","log","id","role","dpname","image","saveItem","navigate","done","_retrieveData","getItem","_","text","styles","forgotPassword","color","paddingBottom","paddingTop","display","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { TouchableOpacity, StyleSheet, View, Alert, AsyncStorage  } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../../components/Background'\r\nimport Logo from '../../components/Logo'\r\nimport Header from '../../components/Header'\r\nimport Button from '../../components/Button'\r\nimport TextInput from '../../components/TextInput'\r\nimport BackButton from '../../components/BackButton'\r\nimport authentication from '../../routes/Authentication'\r\nimport { theme } from '../../core/theme'\r\nimport { emailValidator } from '../../helpers/emailValidator'\r\nimport { passwordValidator } from '../../helpers/passwordValidator'\r\nimport AppContainer from './../../navigations/AppNavigation';\r\nimport { State } from 'react-native-gesture-handler'\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n  const [messageErrorLogin, setMessageErrorLogin] = useState(0)\r\n  \r\n  const onLoginPressed = () => {\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n    signin();\r\n  }\r\n\r\n  const signin = async() => {\r\n    try {\r\n      // IP address my computer\r\n      await fetch('http://192.168.1.8:3000/api/login',{\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'email': email.value,\r\n          'pass': password.value\r\n        })\r\n      }).then((response)=>response.json())\r\n      .then((res)=>{\r\n        if(res.status===1){\r\n          console.log(\"res \", res)\r\n          var { id, email, role, dpname, image } = res.body;\r\n          \r\n          authentication.saveItem('emailLG',email);\r\n          authentication.saveItem('idLG',id+\"\");\r\n          authentication.saveItem('roleLG',role+\"\");\r\n          authentication.saveItem('dpnameLG',dpname);\r\n          authentication.saveItem('imageLG',image);\r\n          \r\n          navigation.navigate('Home');\r\n        } else{\r\n          setMessageErrorLogin(1)\r\n          console.log (\"log info no login  \", res)\r\n          // Alert.alert(\"Invalid Credentials\");\r\n        }\r\n      })\r\n      .done();\r\n\r\n    } catch (error) {\r\n      console.log(\"Login client fail \", error);\r\n    }\r\n    \r\n  }\r\n\r\n  _retrieveData = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('emailLogin');\r\n      if (value !== null) {\r\n        // We have data!!\r\n        console.log(value);\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={_ => navigation.navigate(\"StartScreen\")} />\r\n      <Logo />\r\n      <Header>Welcome back{State.email}</Header>\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => { setEmail({ value: text, error: '' }); setMessageErrorLogin(0); } }\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => { setPassword({ value: text, error: '' }); setMessageErrorLogin(0); } }\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.forgotPassword}>\r\n        <Text style={{color: \"red\", paddingBottom: 20, paddingTop: 5, display: messageErrorLogin!=1?\"none\":\"flex\" }}>Email không tồn tại hoặc mật khẩu chưa đúng. Vui lòng nhập lại!</Text>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\r\n        >\r\n          <Text style={styles.forgot} >Forgot your password?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onLoginPressed}>\r\n        Login\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Don’t have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\r\n          <Text style={styles.link}>Sign up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}