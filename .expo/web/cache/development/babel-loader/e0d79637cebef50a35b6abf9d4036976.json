{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\WebProduct_HoanThinh\\\\BaNoiTro_ReactNative\\\\src\\\\screens\\\\health\\\\HealthScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { health } from \"../../data/dataArrays\";\nimport { getNumberOfRecipes } from \"../../data/MockDataAPI\";\n\nvar HealthsScreen = function (_React$Component) {\n  _inherits(HealthsScreen, _React$Component);\n\n  var _super = _createSuper(HealthsScreen);\n\n  function HealthsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HealthsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressCategory = function (item) {\n      var title = item.name;\n      var category = item;\n\n      _this.props.navigation.navigate('ReadPost', {\n        category: category,\n        title: title\n      });\n    };\n\n    _this.onPressRecipe = function (item) {\n      _this.props.navigation.navigate('Recipe', {\n        item: item\n      });\n    };\n\n    _this.renderCategory = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressCategory(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.healthItemContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.healthPhoto,\n        source: {\n          uri: item.photo_url\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.healthName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, item.name), React.createElement(Text, {\n        style: styles.healthInfo,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, item.des)));\n    };\n\n    return _this;\n  }\n\n  _createClass(HealthsScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: health,\n        renderItem: this.renderCategory,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HealthsScreen;\n}(React.Component);\n\nHealthsScreen.navigationOptions = {\n  title: 'Sức khỏe'\n};\nexport { HealthsScreen as default };","map":{"version":3,"sources":["D:/WebProduct_HoanThinh/BaNoiTro_ReactNative/src/screens/health/HealthScreen.js"],"names":["React","styles","health","getNumberOfRecipes","HealthsScreen","props","onPressCategory","item","title","name","category","navigation","navigate","onPressRecipe","renderCategory","healthItemContainer","healthPhoto","uri","photo_url","healthName","healthInfo","des","id","Component","navigationOptions"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,MAAT;AACA,SAASC,kBAAT;;IAEqBC,a;;;;;AAKnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAInBC,eAJmB,GAID,UAAAC,IAAI,EAAI;AACxB,UAAMC,KAAK,GAAGD,IAAI,CAACE,IAAnB;AACA,UAAMC,QAAQ,GAAGH,IAAjB;;AACA,YAAKF,KAAL,CAAWM,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,EAA2C;AAAEF,QAAAA,QAAQ,EAARA,QAAF;AAAYF,QAAAA,KAAK,EAALA;AAAZ,OAA3C;AACD,KARkB;;AAAA,UASnBK,aATmB,GASH,UAAAN,IAAI,EAAI;AACtB,YAAKF,KAAL,CAAWM,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,EAAyC;AAAEL,QAAAA,IAAI,EAAJA;AAAF,OAAzC;AACD,KAXkB;;AAAA,UAanBO,cAbmB,GAaF;AAAA,UAAGP,IAAH,QAAGA,IAAH;AAAA,aACf,oBAAC,kBAAD;AAAoB,QAAA,aAAa,EAAC,qBAAlC;AAAwD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKD,eAAL,CAAqBC,IAArB,CAAN;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACc,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEd,MAAM,CAACe,WAArB;AAAkC,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEV,IAAI,CAACW;AAAZ,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCZ,IAAI,CAACE,IAAtC,CAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACmB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCb,IAAI,CAACc,GAAtC,CAHF,CADF,CADe;AAAA,KAbE;;AAAA;AAElB;;;;WAqBD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEnB,MADR;AAEE,QAAA,UAAU,EAAE,KAAKY,cAFnB;AAGE,QAAA,YAAY,EAAE,sBAAAP,IAAI;AAAA,sBAAOA,IAAI,CAACe,EAAZ;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EAtCwCtB,KAAK,CAACuB,S;;AAA5BnB,a,CACZoB,iB,GAAoB;AACzBhB,EAAAA,KAAK,EAAE;AADkB,C;SADRJ,a","sourcesContent":["import React from 'react';\r\nimport {\r\n  FlatList,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableHighlight\r\n} from 'react-native';\r\nimport styles from './styles'\r\nimport { health } from '../../data/dataArrays';\r\nimport { getNumberOfRecipes } from '../../data/MockDataAPI';\r\n\r\nexport default class HealthsScreen extends React.Component {\r\n  static navigationOptions = {\r\n    title: 'Sức khỏe'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onPressCategory = item => {\r\n    const title = item.name;\r\n    const category = item;\r\n    this.props.navigation.navigate('ReadPost', { category, title });\r\n  };\r\n  onPressRecipe = item => {\r\n    this.props.navigation.navigate('Recipe', { item });\r\n  };\r\n\r\n  renderCategory = ({ item }) => (\r\n    <TouchableHighlight underlayColor='rgba(73,182,77,0.9)' onPress={() => this.onPressCategory(item)}>\r\n      <View style={styles.healthItemContainer}>\r\n        <Image style={styles.healthPhoto} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.healthName}>{item.name}</Text>\r\n        <Text style={styles.healthInfo}>{item.des}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <FlatList\r\n          data={health}\r\n          renderItem={this.renderCategory}\r\n          keyExtractor={item => `${item.id}`}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}